import{_ as i,c as a,e as n,o as l}from"./app-DBMheWNY.js";const e={};function t(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="clean-架构简介" tabindex="-1"><a class="header-anchor" href="#clean-架构简介"><span>Clean 架构简介</span></a></h2><p>Clean 架构是一种软件设计模式，旨在将系统分为不同的层次，每个层次都有明确的职责。它强调：</p><ol><li>独立于框架</li><li>可测试性</li><li>独立于 UI</li><li>独立于数据库</li><li>独立于任何外部代理</li></ol><h2 id="flutter-中的-clean-架构分层" tabindex="-1"><a class="header-anchor" href="#flutter-中的-clean-架构分层"><span>Flutter 中的 Clean 架构分层</span></a></h2><ol><li><p><strong>表现层 (Presentation Layer)</strong></p><ul><li>负责 UI 展示和用户交互</li><li>包含 Widget、Page、Provider 等</li><li>不应包含业务逻辑</li></ul></li><li><p><strong>领域层 (Domain Layer)</strong></p><ul><li>核心业务逻辑所在</li><li>包含 Entity、UseCase、Repository Interface</li><li>完全独立于其他层</li></ul></li><li><p><strong>数据层 (Data Layer)</strong></p><ul><li>负责数据获取和持久化</li><li>包含 Repository、DataSource、Model</li><li>实现 Domain 层的 Repository 接口</li></ul></li></ol><h2 id="开发规则" tabindex="-1"><a class="header-anchor" href="#开发规则"><span>开发规则</span></a></h2><ol><li><p><strong>依赖规则</strong></p><ul><li>依赖方向：presentation -&gt; domain &lt;- data</li><li>内层不应知道外层存在</li></ul></li><li><p><strong>接口隔离</strong></p><ul><li>层与层之间通过接口通信</li><li>具体实现依赖抽象</li></ul></li><li><p><strong>单一职责</strong></p><ul><li>每个类/方法只做一件事</li><li>保持代码简洁易维护</li></ul></li><li><p><strong>测试驱动</strong></p><ul><li>优先编写测试用例</li><li>确保各层可独立测试</li></ul></li><li><p><strong>命名规范</strong></p><ul><li>使用清晰、一致的命名</li><li>体现层次和职责</li></ul></li></ol><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">lib</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├── core</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 核心通用代码</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── constant</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 常量定义</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── error</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 错误处理</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── network</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 网络相关</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── util</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 工具类</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ └── widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 通用 </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widgets</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├── feature</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 功能模块</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ └── feature_name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 具体功能模块</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 数据层</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ ├── datasource</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 数据源</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ ├── model</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 数据模型</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ └── repository</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 仓库实现</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── domain</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 领域层</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ ├── entity</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 实体</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ ├── repository</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 仓库接口</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ │ └── usecase</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 用例</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ └── presentation</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 表现层</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── state</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 状态对象</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── provider</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Riverpod</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 状态管理</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── page</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 页面</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 组件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├── app</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 应用全局配置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── route</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 路由配置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ ├── theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 主题配置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│ └── localization</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> # 国际化</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└── main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dart # 应用入口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const k=i(e,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/flutter/ai/arch/","title":"Flutter开发架构","lang":"zh-CN","frontmatter":{"title":"Flutter开发架构","createTime":"2025/01/03 23:01:24","permalink":"/flutter/ai/arch/"},"headers":[],"readingTime":{"minutes":1.43,"words":430},"git":{"updatedTime":1735919405000,"contributors":[{"name":"Henry Thomas","username":"Henry Thomas","email":"henrythomas9587@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Henry Thomas?v=4","url":"https://github.com/Henry Thomas"}]},"filePathRelative":"notes/flutter/ai/arch.md","bulletin":false}');export{k as comp,r as data};

import{_ as l,c as t,b as a,a as n,e,o as h,r as p}from"./app-DBMheWNY.js";const r={};function k(d,s){const i=p("Mermaid");return h(),t("div",null,[s[0]||(s[0]=a("h2",{id:"概述",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#概述"},[a("span",null,"概述")])],-1)),s[1]||(s[1]=a("p",null,"Android 系统启动是一个复杂而精密的过程，从按下电源键到显示桌面，系统经历了多个阶段和进程的启动。理解系统启动流程对于深入掌握 Android 系统架构至关重要，也是解决系统启动问题、进行启动优化的基础。本文将详细介绍 Android 系统的完整启动流程。",-1)),s[2]||(s[2]=a("h2",{id:"启动流程概览",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#启动流程概览"},[a("span",null,"启动流程概览")])],-1)),s[3]||(s[3]=a("p",null,"Android 系统启动流程大致可分为以下几个阶段：",-1)),n(i,{id:"mermaid-12",code:"eJxLL0osyFAIceFSAALH6OcL1zzZve3phPVPu1bEKujq2ik4RTvl55fk5CempBbFglU5gcWdo30y80orFLxTi/JScyAyzmAZl2jPvMySF/tnP1/RDRF3AYu7RkdVpueXpCLLuIJl3KKDK4tLUnODU4vKUouQ5d3A8u7Rzzfvfr57/rM5vU+7FkJk3MEyHtE+iaV5yRmpRVA3g+XARHFJZU6qgqNCWmZOjpVymmWKWbKJTnFJUX52qpVyqoGZsbk5lKtbnplSkmFlVFCBpNGJXI3OUI3JJinJaZZwjUBdFslG+DS6kKvRFa4xzTIZSaNJooWpMT6NbuRqdCdXowc8VNOMkUI1LSkp2QDGRdIIAEHN3zw="}),s[4]||(s[4]=e('<ol><li><strong>Boot ROM</strong>: 加载引导程序</li><li><strong>Bootloader</strong>: 初始化硬件，加载内核</li><li><strong>Linux Kernel</strong>: 启动内核，加载驱动</li><li><strong>Init 进程</strong>: 第一个用户空间进程，解析 init.rc</li><li><strong>Zygote 进程</strong>: 所有 Java 进程的父进程</li><li><strong>SystemServer 进程</strong>: 启动系统服务</li><li><strong>系统服务</strong>: 各种系统服务启动</li><li><strong>Launcher</strong>: 桌面应用启动</li></ol><p>下面我们将详细介绍每个阶段的工作内容和关键流程。</p><h2 id="详细启动流程" tabindex="-1"><a class="header-anchor" href="#详细启动流程"><span>详细启动流程</span></a></h2><h3 id="第一阶段-boot-rom-和-bootloader" tabindex="-1"><a class="header-anchor" href="#第一阶段-boot-rom-和-bootloader"><span>第一阶段：Boot ROM 和 Bootloader</span></a></h3><p>当用户按下电源键，设备首先执行存储在 ROM 中的预设代码。</p>',5)),n(i,{id:"mermaid-67",code:"eJwrTi0sTc1LTnXJTEwvSszlUgCCgsSikszkzILEvBKF0OLUIoXEYoXnU1Y869iOIe2SWpaZnApS8GLdvqdL2p8vXPNk9zYMZU75+SVB/r4gdSCmApCNVU1OfmIKxD4ED6wQTIDcomtnB7HTSuFZT+eTHd3Pp2x9tmvCyynrwEogckBFUBuBqjqXv1jYA2Q+2bH2+ayWpx1zny7vftoz7cnuxc8XNII1QdVCdUFstVJ42rXgxd69aO5AcNFVw8xFCgHcinfver66+2lb69O1M56v3PVy+hYC6sFO8cnMK60Aanq2YAcXAGL9uMQ="}),s[5]||(s[5]=e('<h4 id="boot-rom" tabindex="-1"><a class="header-anchor" href="#boot-rom"><span>Boot ROM</span></a></h4><p>Boot ROM 是芯片厂商预置在设备中的只读代码：</p><ul><li>执行系统底层硬件初始化</li><li>定位 Bootloader 并将其加载到 RAM</li><li>跳转到 Bootloader 开始执行</li></ul><h4 id="bootloader" tabindex="-1"><a class="header-anchor" href="#bootloader"><span>Bootloader</span></a></h4><p>Bootloader 是运行 Android 之前的一个小程序：</p><ul><li>初始化硬件（如 Flash、屏幕等）</li><li>建立内存空间</li><li>加载 Linux 内核到指定内存地址</li><li>跳转到内核入口点</li></ul><h3 id="第二阶段-linux-内核启动" tabindex="-1"><a class="header-anchor" href="#第二阶段-linux-内核启动"><span>第二阶段：Linux 内核启动</span></a></h3><p>内核启动过程包括以下步骤：</p>',8)),n(i,{id:"mermaid-125",code:"eJxLL0osyFAIceFSAALH6KcT1j/tWvG0rfXZgh2xCrq6dgpO0U875j5d3v20ZxpUGKzUCSzpHP2sp+nF3r3PFux8Nq39ye5tzzfvfr57PkSJM1iJC9TMF+v2PV3S/nLlRiAbIu8ClndF2Pl07Yzn6xY+n9AGkXcFy7sB7Z/9dPcuz7zMkhf7Zz9f0Q2RBRPFJZU5qQqOCmmZOTlWyskmKclpljrFJUX52alWysbm5hbJRlCubnlmSkmGlVFBBZJGN6jGNMs042QTuMa0pKRkAxgXSSMAA8t8DQ=="}),s[6]||(s[6]=e('<ol><li><strong>内核解压和初始化</strong>: 解压内核镜像，初始化内核数据结构</li><li><strong>硬件初始化</strong>: 识别 CPU 类型，初始化内存管理、中断管理等</li><li><strong>挂载根文件系统</strong>: 挂载 RAM Disk 作为根文件系统</li><li><strong>启动设备驱动</strong>: 启动各种硬件设备的驱动程序</li><li><strong>创建 Init 进程</strong>: 创建第一个用户空间进程（PID 为 1）</li></ol><h3 id="第三阶段-init-进程" tabindex="-1"><a class="header-anchor" href="#第三阶段-init-进程"><span>第三阶段：Init 进程</span></a></h3><p>Init 进程是 Android 系统中的第一个用户空间进程，负责初始化系统环境。</p>',3)),n(i,{id:"mermaid-159",code:"eJwrTi0sTc1LTnXJTEwvSszlUgCCgsSikszkzILEvBIF79SivNQchcRiBZ/MvNIKKB9DmWdeZglIEZh+sX/28xXdGGoCivILUotKKkHqnm6c96xh+bM5vU+7FmIodElMzc3PKwarW9fxrGsJDgOjKtPzS1JByqAsJHVgAuJYXTs7kLOsFJ52zH66exeyGxU0AjxdFAw1wapB4nC1L5YvfjZvgkImkKNXlKzwsrX3+d51z6a1P9m9DVkxzE9Awyesf9q1AsNfUHVQL8GVtW5+OWUdhuegiiG+galF8xwAhpK2/g=="}),s[7]||(s[7]=e(`<h4 id="init-进程主要任务" tabindex="-1"><a class="header-anchor" href="#init-进程主要任务"><span>Init 进程主要任务</span></a></h4><ol><li><strong>挂载文件系统</strong>: 挂载 /sys、/dev、/proc 等文件系统</li><li><strong>创建设备节点</strong>: 在 /dev 下创建设备节点</li><li><strong>解析 init.rc</strong>: 解析初始化配置文件</li><li><strong>启动属性服务</strong>: 提供系统属性管理服务</li><li><strong>启动关键守护进程</strong>: 启动 servicemanager、vold、adbd 等</li><li><strong>启动 Zygote</strong>: 通过执行 app_process 启动 Zygote 进程</li></ol><h4 id="init-rc-文件解析" tabindex="-1"><a class="header-anchor" href="#init-rc-文件解析"><span>init.rc 文件解析</span></a></h4><p>init.rc 是 Android 初始化脚本，包含四种语句类型：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 示例 init.rc 文件结构</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /init.</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\${</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ro</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">hardware</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.rc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> early-init</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 早期初始化动作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    start</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ueventd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 初始化动作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /system</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    mount</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ext4</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /dev/block/bootdevice/by-name/system</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /system</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ro</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> post-fs</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 文件系统挂载后的动作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    restorecon_recursive</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /system</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zygote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /system/bin/app_process</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Xzygote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /system/bin</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --zygote</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --start-system-server</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    class</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    socket</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zygote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stream</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 660</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> system</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    onrestart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> write</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /sys/android_power/request_state</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> wake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Action</strong>: 由触发器和命令组成（如 on init）</li><li><strong>Service</strong>: 定义需要启动的服务（如 service zygote）</li><li><strong>Command</strong>: 具体执行的命令（如 mkdir、mount）</li><li><strong>Option</strong>: 服务的选项（如 socket、onrestart）</li></ul><h3 id="第四阶段-zygote-进程" tabindex="-1"><a class="header-anchor" href="#第四阶段-zygote-进程"><span>第四阶段：Zygote 进程</span></a></h3><p>Zygote 是所有 Java 进程的父进程，负责启动 SystemServer 和应用程序。</p>`,8)),n(i,{id:"mermaid-230",code:"eJxLL0osyFAIceFSAALHaM+8zJIX+2c/X9Edq6Cra1fzdML6p10rahScoqMq0/NLUqFyYNVOEBVdC17s3Vuj4Bwd5vu0Y+7T5d1Pe6ZBFDijKHCJfrZgx9P9zc837n66azJEhQtYxctFLTBFrtEvtrY82zUBIu2K4ga36ODK4pLU3ODUorLUIhQVa7cCLa1RcI9+umvK8ykrkF0JJopLKnNSgQ5Oy8zJsVJONkmzTLbUKS4pys9OtVI2Nkm0MDWGcnXLM1NKMqyMCiqQNLqRq9EdqjHNMs042QSuMS0pKdkAxkXSCAA5L5rs"}),s[8]||(s[8]=e(`<h4 id="zygote-启动流程" tabindex="-1"><a class="header-anchor" href="#zygote-启动流程"><span>Zygote 启动流程</span></a></h4><ol><li><strong>启动 app_process</strong>: Init 进程执行 app_process 命令</li><li><strong>创建 JVM</strong>: 创建 Java 虚拟机</li><li><strong>注册 JNI 方法</strong>: 注册 JNI 本地方法</li><li><strong>创建 Java 运行时</strong>: 初始化 Java 运行环境</li><li><strong>预加载类和资源</strong>: 加载常用的 Java 类和资源</li><li><strong>启动 SystemServer</strong>: 创建 SystemServer 进程</li><li><strong>进入监听循环</strong>: 等待请求创建新的应用进程</li></ol><p>关键源代码（app_main.cpp）：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> argc</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> char*</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    AppRuntime </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">runtime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> computeArgBlockSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">argc</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">zygote</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        runtime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.android.internal.os.ZygoteInit</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> zygote</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">className</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        runtime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">com.android.internal.os.RuntimeInit</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> zygote</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键源代码（ZygoteInit.java）：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String argv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 注册Socket</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    registerZygoteSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">socketName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 预加载类和资源</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    preload</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启动SystemServer</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">startSystemServer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        startSystemServer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">abiList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> socketName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 进入循环，接收请求</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    runSelectLoop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">abiList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第五阶段-systemserver-进程" tabindex="-1"><a class="header-anchor" href="#第五阶段-systemserver-进程"><span>第五阶段：SystemServer 进程</span></a></h3><p>SystemServer 进程是 Android 系统服务的载体，负责启动和管理所有的系统服务。</p>`,8)),n(i,{id:"mermaid-285",code:"eJyNUctKw0AU3fcr5gf8gSIBW5e+IIjgboy36VCaiXeurVlLQSuKG93UhS6EIkh2IrbYn3EaP8MxxZJxEnQWszjnHs655yo4OoYogHXBQ+TdGjMv5kgiEDGPiO0noSRwYD9RBF0fsAfokA0pSRHy+JsXAShnoikRKsltagNabP4tkqx4XtG7zloSO1acz9koG1/kkiLsCPXZSE/eFlhTRgQnVCZyljHK61QPx3p6o9Pp/O5SDx9y4ZaJx1CEbWKy5ZZQZ2sBiZ6gZJNHPFyuuHqA3o7sA9owy57Py/IUq/uJMr9/1bPTyii2pMGJAJOC+64yvj5xUn94W5dZ9jB4+ZjcVpr/0uyJ6FD2SxrgQcdA/+vAPqQ5uB48bkgZA+r3p+wqrX0BLvMfOg=="}),s[9]||(s[9]=e(`<h4 id="systemserver-启动流程" tabindex="-1"><a class="header-anchor" href="#systemserver-启动流程"><span>SystemServer 启动流程</span></a></h4><ol><li><strong>创建进程</strong>: Zygote fork 出 SystemServer 进程</li><li><strong>创建 Context</strong>: 创建系统上下文环境</li><li><strong>启动各类服务</strong>: <ul><li><strong>引导服务</strong>: ActivityManagerService、PowerManagerService 等</li><li><strong>核心服务</strong>: BatteryService、UsageStatsService 等</li><li><strong>其他服务</strong>: WindowManagerService、PackageManagerService 等</li></ul></li><li><strong>进入消息循环</strong>: 执行 Looper.loop() 开始消息循环</li></ol><p>关键源代码（SystemServer.java）：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> SystemServer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">private</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 创建SystemContext</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    createSystemContext</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启动服务</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    try</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        startBootstrapServices</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        startCoreServices</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        startOtherServices</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Throwable </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 进入消息循环</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    Looper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第六阶段-系统服务启动" tabindex="-1"><a class="header-anchor" href="#第六阶段-系统服务启动"><span>第六阶段：系统服务启动</span></a></h3><p>SystemServer 启动的服务按功能和启动时机可以分为三类：</p><h4 id="引导服务-bootstrap-services" tabindex="-1"><a class="header-anchor" href="#引导服务-bootstrap-services"><span>引导服务（Bootstrap Services）</span></a></h4><p>最先启动的核心服务，如：</p><ul><li><strong>ActivityManagerService</strong>: 管理四大组件</li><li><strong>PowerManagerService</strong>: 管理电源</li><li><strong>PackageManagerService</strong>: 管理应用包</li><li><strong>DisplayManagerService</strong>: 管理显示</li></ul><h4 id="核心服务-core-services" tabindex="-1"><a class="header-anchor" href="#核心服务-core-services"><span>核心服务（Core Services）</span></a></h4><p>基础功能服务，如：</p><ul><li><strong>BatteryService</strong>: 管理电池</li><li><strong>UsageStatsService</strong>: 使用统计</li><li><strong>WebViewUpdateService</strong>: WebView 更新</li></ul><h4 id="其他服务-other-services" tabindex="-1"><a class="header-anchor" href="#其他服务-other-services"><span>其他服务（Other Services）</span></a></h4><p>功能性服务，如：</p><ul><li><strong>WindowManagerService</strong>: 窗口管理</li><li><strong>InputManagerService</strong>: 输入管理</li><li><strong>LocationManagerService</strong>: 位置服务</li><li><strong>NotificationManagerService</strong>: 通知管理</li></ul><h3 id="第七阶段-launcher-启动" tabindex="-1"><a class="header-anchor" href="#第七阶段-launcher-启动"><span>第七阶段：Launcher 启动</span></a></h3><p>Launcher 是 Android 的桌面应用，是用户看到的第一个应用界面。</p>`,17)),n(i,{id:"mermaid-423",code:"eJwrTi0sTc1LTnXJTEwvSszlUgCCgsSikszkzILEvBIFR99ghcRiBcfkksyyzJJK38S8xPTUouDUorLM5FQM1T6JpXnJGalFjgUFIF0w7tNdU55PWYGhOhxidnhmXkp+ORaTwQTQAbp2dkDSSqG4srgkNTcoNTGlUkMTSRLJViuFpxPWP+1a4ZGfmwp3NFgpkiJ0Lfl5zkWpiSWpUEPxqHzateDF3r0Q7zydve/Zgvank3qebuh/2bziye5tWHQDvWil8GL99mcbm55t3w3U/nzV9Kf9i8EqgXIY5ne0vWzthah5unPbsxn7ni/ZxQUAEFinvQ=="}),s[10]||(s[10]=e(`<h4 id="launcher-启动流程" tabindex="-1"><a class="header-anchor" href="#launcher-启动流程"><span>Launcher 启动流程</span></a></h4><ol><li><strong>AMS 准备完成</strong>: ActivityManagerService 调用 systemReady()</li><li><strong>启动 Home 应用</strong>: 启动类别为 CATEGORY_HOME 的 Activity</li><li><strong>Launcher 初始化</strong>: 加载桌面布局、应用图标和小部件</li><li><strong>显示桌面</strong>: 通过 WindowManager 显示桌面界面</li></ol><p>关键源代码（ActivityManagerService.java）：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> systemReady</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">final</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Runnable goingCallback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> TimingsTraceLog traceLog</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启动持久性应用</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    startPersistentApps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">PERSISTENT_MASK</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启动Home应用</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    startHomeActivityLocked</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">currentUserId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">systemReady</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进程启动时间线" tabindex="-1"><a class="header-anchor" href="#进程启动时间线"><span>进程启动时间线</span></a></h2><p>以下是 Android 系统启动的时间线图，展示了主要进程的启动顺序和依赖关系：</p>`,6)),n(i,{id:"mermaid-459",code:"eJxtkb1OwzAUhXeewg+QgbZM2WBAQhQh0Y3NSUyJlNqSc4vojFiKkBgKRQIJ2DLRAYhQUykvgxP6FvgnuGkVD1F07znnfr7uYwqwheSBECKCdmnAWRig8iMrsxdxNxPjpJimy+lnOc+1LsBA9hkfYEAo1hX9iYkPIaNILO7FbLF8TIv3L93YYwzQyfGR+v8/Lm45aNtBLROgJBHDAeF1SdtB+AxkTYnbRtkN6fASHRJOSbRSdqxSejoNUL/5U5ncmNvoxgENwRTXsDw5qUqSmdXM01GfAdlUu57lU65qam8UAxn0CL8gfOVwPUuoXDsNhGbfxfOtGL/phtmjKawx+pZRpVaMxeu3yK+a1JZS+ap9i+v0J3toUltO5WvapJhPyklS22QXD6l/Xn85mRNYRpUoGf8AbqjOaA=="}),s[11]||(s[11]=e(`<h2 id="启动调试与优化" tabindex="-1"><a class="header-anchor" href="#启动调试与优化"><span>启动调试与优化</span></a></h2><h3 id="启动调试方法" tabindex="-1"><a class="header-anchor" href="#启动调试方法"><span>启动调试方法</span></a></h3><ol><li><strong>系统日志分析</strong>: 使用 logcat 查看启动日志</li></ol><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">adb</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> logcat</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">SystemServer</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li><strong>启动时间测量</strong>: 使用 bootchart 或 systrace 工具</li></ol><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 启用 bootchart</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">adb</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shell</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> touch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /data/bootchart/enabled</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用 systrace</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> systrace.py</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> trace.html</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> wm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> am</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> view</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sched</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freq</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> idle</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> load</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>引导过程跟踪</strong>: 修改 init.rc 添加调试信息</li></ol><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>on boot</span></span>
<span class="line"><span>    exec - root root -- /system/bin/logwrapper /system/bin/sh -c &quot;echo &#39;Boot completed&#39; &gt; /dev/kmsg&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动优化技巧" tabindex="-1"><a class="header-anchor" href="#启动优化技巧"><span>启动优化技巧</span></a></h3><ol><li><strong>关键服务优先启动</strong>: 调整服务启动顺序，优先启动关键服务</li><li><strong>延迟启动非关键服务</strong>: 将非关键服务延迟到系统启动完成后启动</li><li><strong>减少启动时资源加载</strong>: 减少预加载资源数量</li><li><strong>优化 init.rc 配置</strong>: 精简 init.rc 文件，移除不必要的操作</li><li><strong>代码级优化</strong>: 优化关键服务的初始化代码</li><li><strong>并行启动服务</strong>: 将无依赖关系的服务并行启动</li></ol><h2 id="定制系统启动流程" tabindex="-1"><a class="header-anchor" href="#定制系统启动流程"><span>定制系统启动流程</span></a></h2><h3 id="修改-bootloader" tabindex="-1"><a class="header-anchor" href="#修改-bootloader"><span>修改 Bootloader</span></a></h3><p>修改 Bootloader 配置可以更改启动参数：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span># 修改启动参数</span></span>
<span class="line"><span>setenv bootargs &quot;console=ttyS0,115200 root=/dev/mmcblk0p2 rw rootwait&quot;</span></span>
<span class="line"><span>saveenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改-init-rc" tabindex="-1"><a class="header-anchor" href="#修改-init-rc"><span>修改 init.rc</span></a></h3><p>通过修改 init.rc 文件可以定制初始化过程：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span># 添加自定义服务</span></span>
<span class="line"><span>service custom_service /system/bin/custom_service</span></span>
<span class="line"><span>    class main</span></span>
<span class="line"><span>    user root</span></span>
<span class="line"><span>    group root</span></span>
<span class="line"><span>    oneshot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加启动服务" tabindex="-1"><a class="header-anchor" href="#添加启动服务"><span>添加启动服务</span></a></h3><p>在 SystemServer 中添加自定义系统服务：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">private</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> startOtherServices</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 添加自定义服务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    traceBeginAndSlog</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">StartMyService</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    try</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        Slog</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">TAG</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">My Service</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        myService </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> MyService</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        ServiceManager</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addService</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">my_service</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> myService</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Throwable </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        reportWtf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">starting My Service</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    traceEnd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>Android 系统启动是一个复杂而精密的过程，从底层硬件初始化到上层应用启动，经历了多个阶段和多个进程的协作。理解这一过程不仅有助于解决系统启动问题，也有助于进行系统级优化。本文详细介绍了从按下电源键到显示桌面的完整启动流程，希望能帮助读者深入理解 Android 系统架构。</p><hr><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源"><span>参考资源</span></a></h2><ul><li><a href="https://source.android.com/" target="_blank" rel="noopener noreferrer">Android 开源项目</a></li><li><a href="https://source.android.com/devices/bootloader/boot-flow" target="_blank" rel="noopener noreferrer">Android 启动流程</a></li><li><a href="https://source.android.com/devices/architecture/init" target="_blank" rel="noopener noreferrer">Init 进程文档</a></li><li>《深入理解 Android 内核设计思想》第 2 章 系统启动</li><li>《Android 系统源代码情景分析》第 1 章 系统启动过程</li></ul>`,25))])}const g=l(r,[["render",k],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/android/vuo6i9ic/","title":"系统启动流程","lang":"zh-CN","frontmatter":{"title":"系统启动流程","createTime":"2025/04/29 14:32:19","permalink":"/android/vuo6i9ic/"},"headers":[],"readingTime":{"minutes":8.83,"words":2648},"git":{"updatedTime":1745914733000,"contributors":[{"name":"Henry Thomas","username":"Henry Thomas","email":"henrythomas9587@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Henry Thomas?v=4","url":"https://github.com/Henry Thomas"}]},"filePathRelative":"notes/android/framework/03/系统启动流程.md","bulletin":false}');export{g as comp,c as data};
